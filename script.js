document.addEventListener("DOMContentLoaded", () => {
    const apiKey = "5c83d108bd45499e97f111053251803";  // Replace with your API key
    const weatherText = document.getElementById("weather");
    const adviceText = document.getElementById("advice");
    const getLocationBtn = document.getElementById("getLocationBtn");
    const popup = document.getElementById("welcomePopup");
    const closePopup = document.getElementById("closePopup");
    const languageSelect = document.getElementById("languageSelect");

    // Close the welcome popup
    closePopup.addEventListener("click", () => {
        popup.style.display = "none";
    });

    // Get weather when button is clicked
    getLocationBtn.addEventListener("click", () => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(success, error);
        } else {
            alert("‚ùå Geolocation is not supported by your browser.");
        }
    });

    function success(position) {
        const lat = position.coords.latitude;
        const lon = position.coords.longitude;
        console.log(`üìç Location Found: ${lat}, ${lon}`);
        fetchWeather(lat, lon);
    }

    function error(err) {
        console.error("‚ùå Geolocation Error:", err.message);
        alert("‚ùå Location access denied. Enable it in browser settings.");
    }

    async function fetchWeather(lat, lon) {
        const url = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${lat},${lon}`;

        try {
            const response = await fetch(url);
            if (!response.ok) throw new Error(`HTTP Error: ${response.status}`);

            const data = await response.json();
            console.log("‚úÖ Weather Data:", data);

            const temp = data.current.temp_c;
            const condition = data.current.condition.text;
            const rain = data.current.precip_mm;  // Rain in mm

            // Update weather info
            weatherText.innerHTML = `üå°Ô∏è Temperature: ${temp}¬∞C <br> üå•Ô∏è Condition: ${condition}`;

            // Farming Advice
            let advice = "";
            if (rain > 10) {
                advice = "üö® Heavy Rain Alert! Avoid farming today.";
            } else if (rain > 0) {
                advice = "üå¶Ô∏è Light rain expected. Use proper drainage.";
            } else {
                advice = "‚òÄÔ∏è No rain today! You should water the crops.";
            }

            adviceText.innerHTML = translateText(advice);

        } catch (err) {
            console.error("‚ùå Error Fetching Weather Data:", err.message);
            weatherText.innerHTML = "‚ùå Error fetching weather data! Check console.";
        }
    }

    // üåé Translate text based on selected language
    function translateText(text) {
        const translations = {
            "en": text,
            "ta": {
                "üö® Heavy Rain Alert! Avoid farming today.": "üö® ‡Æï‡Æ©‡ÆÆ‡Æ¥‡Øà ‡Æé‡Æö‡Øç‡Æö‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Øà! ‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡Æµ‡Æø‡Æµ‡Æö‡Ææ‡ÆØ‡ÆÆ‡Øç ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ ‡Æµ‡Øá‡Æ£‡Øç‡Æü‡Ææ‡ÆÆ‡Øç.",
                "üå¶Ô∏è Light rain expected. Use proper drainage.": "üå¶Ô∏è ‡Æö‡Æø‡Æ±‡Æø‡ÆØ ‡ÆÆ‡Æ¥‡Øà ‡Æé‡Æ§‡Æø‡Æ∞‡Øç‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ. ‡Æö‡Æ∞‡Æø‡ÆØ‡Ææ‡Æ© ‡Æµ‡Æü‡Æø‡Æï‡Ææ‡Æ≤‡Øç ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ.",
                "‚òÄÔ∏è No rain today! You should water the crops.": "‚òÄÔ∏è ‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡ÆÆ‡Æ¥‡Øà ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà! ‡Æ™‡ÆØ‡Æø‡Æ∞‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ®‡ØÄ‡Æ∞‡Øç ‡Æï‡Øä‡Æü‡ØÅ."
            },
            "hi": {
                "üö® Heavy Rain Alert! Avoid farming today.": "üö® ‡§≠‡§æ‡§∞‡•Ä ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä! ‡§Ü‡§ú ‡§ñ‡•á‡§§‡•Ä ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç‡•§",
                "üå¶Ô∏è Light rain expected. Use proper drainage.": "üå¶Ô∏è ‡§π‡§≤‡•ç‡§ï‡•Ä ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ‡•§ ‡§â‡§ö‡§ø‡§§ ‡§ú‡§≤ ‡§®‡§ø‡§ï‡§æ‡§∏‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§",
                "‚òÄÔ∏è No rain today! You should water the crops.": "‚òÄÔ∏è ‡§Ü‡§ú ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§®‡§π‡•Ä‡§Ç! ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§™‡§æ‡§®‡•Ä ‡§¶‡•á‡§Ç‡•§"
            }
        };

        const lang = languageSelect.value;
        return translations[lang]?.[text] || text;
    }

    // Update translation on language change
    languageSelect.addEventListener("change", () => {
        adviceText.innerHTML = translateText(adviceText.innerHTML);
    });
});
